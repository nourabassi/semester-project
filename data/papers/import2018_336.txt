Concepts Before Coding: The Impact of Classroom Culture andActivity Design on Student Engagement With Computer ScienceConceptsPatrik Lundh, SRI International, patrik.lundh@sri.comShuchi Grover, shuchig@cs.stanford.eduNicholas Jackiw, SRI International, nicholas.jackiw@sri.comAbstract: We developed a computer science curriculum, VELA, which provides nonprogramming activities for middle school students to learn variables, expressions, loops, andabstraction. Ongoing teacher and student case study research focuses on how socioculturalaspects of instruction help students productively engage with these concepts. We find thattraditional classroom practices challenge students’ engagement. We discuss the ramificationsfor VELA activity design and for policies around implementing effective computer scienceprograms.IntroductionIn this poster, we present a sociocultural examination of how classroom features influence middle school students’engagement with non-programming activities designed for learning computer science (CS) concepts. We designedactivities for students to build conceptual understanding before programming in block-based environments. Weconducted case studies of teachers and students in three urban classrooms to document roles, expectations, values,and practices in the curricular structure and social organization of the classroom.Block-based languages such as Scratch typically introduce learners to CS. But without proper guidance,students don't always understand how moving around programming blocks on the screen relates to CS concepts.We designed a curriculum, VELA, for middle school students to learn four key CS concepts: variables,expressions, loops, and abstraction. The VELA activities help students become familiar with and use theseconcepts in non-programming contexts (digital or unplugged) before they encounter them in a Scratchprogramming environment. For example, we treat variables and expressions as dynamic quantities or values thatcan change over time, and provide students with both digital and unplugged scenarios for applying these ideas.Details of VELA can be found in (Grover et al, 2018).Theoretical backgroundStudents often struggle with essential CS concepts, for example with variables in their efforts to use mathematicalexpressions and loops to solve more complex problems with appropriate abstraction techniques. Whilevisualization tools help debugging code, understanding control flow and program state, they do not always helplearners grasp how variables, expressions, and loops mutually interact to computationally solve a problem(Grover, Pea, & Cooper, 2015). VELA draws specifically on interactive dynamic representations in math tosupport these skills (Jackiw, 2009, 1991).Dynamic representations derive from a constructivist model of learning focused on cognitive aspects.But learning involves both individual construction of knowledge and the sociocultural processes students partakein (Cobb & Yackel, 1996). Can students abstract CS knowledge and transfer that knowledge to block-basedprogramming? Similar questions have been addressed in the literatures on situated cognition (Brown, Collins, &Duguid, 1989) and situated learning (Lave & Wenger, 1991). Learning happens within a sociocultural context.Students’ understanding of their roles, the expectations from the teacher and the environment, the valuescommunicated through the teacher and the overall structure, and the nature of the classroom practices influencehow students approach content, interpret it, and organize it with existing knowledge structures.MethodsThe VELA curriculum was a 3-week unit embedded in a 9-week CS curriculum implemented in an urban schooldistrict. We conducted case study research of teachers and students. For four students in each of three classrooms,we collected VELA assessment outcomes and district demographic data, interviewed students twice, observedstudents in the classroom six times or more, and interviewed teachers about students. We observed teachers 7-8times, interviewed teachers twice, and conducted group discussions with teachers.We developed semi-structured interview protocols for teachers and student interviews. For classroomobservations, we developed structured observation memos. The observations captured students’ interactions withICLS 2018 Proceedings1447© ISLSthe VELA activities, engagement with teacher and peers in whole class discussions, student collaboration, teachertalk and actions during lecture, whole class discussion, and teacher support to individual students and groups.The VELA paper-pencil assessment targeted the CS concepts, and was designed using a principledassessment design framework with teacher feedback, student cognitive thinkalouds, and language review by anELL expert. Question types included multiple-choice, open response, and the use of snippets of Scratch code.FindingsAll three classrooms gained significantly on the VELA pre-post assessment. The VELA activities engagedstudents productively with the CS concepts, in particular with variables, expressions, and loops. But studentsstruggled with abstraction and Boolean variables and expressions. In interviews, students were mostly able todefine variables, expressions, and loops, but less able to describe their applications. We believe traditionalinstruction and time constraints limited the depth of students’ engagement with the activities and the concepts.VELA encourages student roles such as collaborator, problem solver, and explorer. Students are expectedto struggle with ideas and explore them in different ways. Play, making mistakes, creativity, and critical thinkingare valued. Students have opportunities to collaborate with peers and participate in whole class discussions toproblem solve together and have their own thinking and prior learning articulated and challenged.The sociocultural environment of the classrooms differed. Teachers retained traditional roles ofclassroom managers. Student collaboration, problem solving, and exploration were limited by physical, temporal,and task boundaries defined by teachers. Teachers verbally encouraged collaboration, problem solving, creativity,and the importance of making mistakes, but actual practices often did not support them. Collaboration was limitedand superficial. In whole class discussions, two teachers asked procedural and funneling questions. One teacherasked more open-ended and probing questions but did not facilitate conversations that built on student’s ideas.Teachers’ negotiations of the constraints of the traditional classroom and the potentials for deeperengagement in the VELA curriculum turned on issues of time and the need to move the entire class along acommon trajectory. The teacher in the high achieving class in a high achieving school noted that whiledifferentiation is a big topic in the district, it rarely gets meaningfully addressed. She also said that while studentswere highly engaged with VELA, they lacked time to think deeply about the concepts; to return to the ideas,solidify them, calibrate misunderstandings, and build deeper understanding over time.Conclusion and next stepsPolicy and education leaders see computational thinking as necessary for all citizens. Our research makes a uniquecontribution to broaden participation in computing through engaging activities aimed at deeper conceptualengagement with CS concepts. Consistent with literature on education reform, our findings highlight the tensionbetween efforts to support conceptual learning within the limits of an established system. We believe our workin-progress research provides an important perspective on these issues through rich descriptions of teachers’negotiations of roles, beliefs, and practical constraints in their efforts to teach CS concepts.ReferencesBrown, J. S., Collins, A., & Duguid, P. (1989). Situated cognition and the culture of learning. EducationalResearcher, 18(1), 32-42. Cobb, P., & Yackel, E. (1996). Constructivist, emergent, and socioculturalperspectives in the context of developmental research. Educational Psychologist, 31(3-4), 175-190.Grover, S., Pea, R., Cooper, S. (2015). Designing for Deeper Learning in a Blended Computer Science Course forMiddle School Students. Computer Science Education, 25(2), 199-237.Grover, S., Jackiw, N., Lundh, P. (2018). Combining Non-Programming Activities with Programming forIntroducing Foundational Computing Concepts. In Proceedings of ICLS’18. ISLS.Jackiw, N. (2009, 1991). The Geometer’s Sketchpad. Software. Ver, 1-5. Berkeley, CA: Key Curriculum Press.Laborde, J. M., & Strässer, R. (1990). Cabri-Geometre: A microworld of geometry for guided discovery learning.Zentralblatt für didaktik der mathematik, 90(5), 171-177.Lave, J., & Wenger, E. (1991). Situated learning: Legitimate peripheral participation. Cambridge, MA:Cambridge University Press.AcknowledgmentsWe thank NSF (#1543062) for grant support; Bryan Twarek, Matthias Hauswirth, Jeremy Roschelle, YesicaLopez, and our district partner, teachers & students for contributions to this research.ICLS 2018 Proceedings1448© ISLS