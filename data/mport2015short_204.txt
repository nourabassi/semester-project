Epistemography and Professional CSCL Environment DesignGolnaz Arastoopour and David Williamson Shafferarastoopour@wisc.edu, dws@education.wisc.eduUniversity of Wisconsin-MadisonAbstract: This study uses the epistemographic method to examine how professionals linkways of doing, thinking, and knowing in an epistemic frame that guides their reflection-inaction, which can inform the design of professional computer supported collaborative learning(CSCL) environments. This study examines student engineers learning design in a co-opprogram at a manufacturing company to investigate how participant structures, activities, andpedagogies are connected to an epistemic understanding of the profession. The analysisdescribes the significant participant structures in the engineering co-op program and thepedagogical techniques that are used in these participant structures. The analysis suggests thatparticipant structures and pedagogical techniques are both orchestrated by and orchestrate thedevelopment of one of the central epistemological features of collaborative engineeringdesign. These results suggest that epistemographic analysis is a useful tool in the developmentand analysis of professional CSCL environments.Keywords: epistemology, reflection, participant structures, design, engineering, practicum,professionalBackgroundIn this paper, we examine the method of epistemography as a tool for analyzing collaborative problem solving—and this as a tool for developing computer supported collaborative learning (CSCL) environments based on realworld collaborative learning environments. To do this, we conduct an epistemographic analysis of anengineering practicum.Collaborative work on complex problems is a fundamental aspect of engineering. Most problems thatengineers address are ill-structured, meaning there are many acceptable solutions and no definitive procedures tofollow to produce or determine a best solution (Cross, 1994; Dym, 1994). In order to understand howprofessionals manage ill-structured problems, Schön (1987) argues that professionals work by accessing a“repertoire of examples, images, understandings, and actions” (p. 66) that ranges across various design problemsand finding a comparable situation to the problem at hand. Schön (1987) calls this method reflection-in-action: away that professionals adapt to unexpected situations that arise in design problems without interrupting the flowof activity in progress. But not all problems in engineering—or in any ill-structured domain—are open-ended inthis sense. Some problems do have known solution pathways, and thus part of professional reflection-in-actionalso has to include the ability to recognize and solve well-formed problems.How, then, do engineers learn the forms of reflection-in-action that characterizes their profession?Decades of research in the learning sciences shows that learning to engage in a practice, such as engineering, isa social and situated process (Anderson, Herbert, & Simon, 1997; Bandura, 1986; Lave & Wenger, 1991). Itrequires initiation into a community of practice—a group of people who share ways of working, thinking, andacting in the world (1999).In professional communities of practice, novices engage in a professional practicum where theyparticipate in the practice under the guidance of senior practitioners, or mentors (Schön, 1987). In engineeringprofessional practica, students learn to solve design problems by engaging in actions within the practiceenvironment. In some practica, the student is asked to start designing before he even knows what designingmeans. (Schön, 1987; Shaffer, 2007b). Reflective discussions between mentor and student can occur withindifferent participant structures—different “patterns of involvement that structure a particular kind of situationwithin a given practice” (Shaffer, 2005, p. 7). For example, Schön argues that there are several possiblecombinations of who is doing the acting and who is doing the reflecting. A mentor may demonstrate a task, anda student may watch and reflect upon the mentor’s demonstration. Conversely, a student may produce a designdrawing that the mentor critiques. In Schön’s work, these forms of reflection-on-action are treated as variationson a theme, but without a taxonomy or distinction as to when one or the other form might be preferred or shouldbe used.Shaffer (2007a) has characterized the learning that occurs in participant structures within a practicum interms of an epistemic frame—collections of skills, knowledge, identities, values, and epistemologies that areCSCL 2015 Proceedings204© ISLSconnected in specific ways. Epistemic frame theory suggests that professionals rely on domain-specific skillsand knowledge to make and justify decisions. They have characteristics that define their identities as membersof the group, as well as a set of values they use to identify important issues and problems in the field. From thisperspective, developing an epistemic frame means making a network of connections between these skills,knowledge, identities, values, and epistemological elements that are characteristic of the community. Forexample, in the engineering epistemic frame, an engineer might make a design decision to increase the safetyfactor of a product for the wellbeing of the client based on a completed stress analysis. In this case, the engineeris justifying the design decision by valuing the safety of the client and executing the skill of completing a stressanalysis. She knows which values to consider and what information and skills to gather in order to make adesign decision. Thus, one goal of a professional practicum is to build an epistemic frame.The development of students’ epistemic frames through such experiences can, in turn, be quantifiedusing epistemic network analysis (ENA) (Shaffer et al., 2009). Because the learning that takes place during apracticum can be characterized by the connections between elements of a professional frame, ENA measureswhen and how often students make such links during their work. ENA creates a network model in which thenodes of the network represent the skills, knowledge, identity, values, and epistemology from a domain. Thelinks between these nodes quantify how often a person has made connections between these elements at somepoint in time. In this way, ENA models the development over time of a student’s epistemic frame—and thusquantifies their ability to think and work like professionals.Investigating the epistemic frames of professional practices involves conducting an epistemography, anethnographic analysis of the structure of a professional practicum through the lens of epistemic frames (Bagley& Shaffer, 2010; Hatfield & Shaffer, 2010). For example, Nash and Shaffer (2013) investigated the field ofgame design where the observed students and mentors interacting in a studio-style practicum. By examining thesignificant participant structures in the practicum, their analysis revealed a particular form of epistemicmentoring that mirrored a coaching model where mentors and students took indirect and unexpected path duringthe learning process. In general, epistemographies focus on participant structures of reflection and theoverarching epistemologies that guide those structures.In this study, we look at how an examination of the epistemological underpinnings of a professionalpracticum shed like on the pedagogical process of learning through reflection-on-action described by Schön(1987). In doing so, we argue that such epistemological inquiry is a useful tool in the development and analysisof CSCL environments.The environment we analyze is an engineering co-op experience for college students. This study usesthe epistemographic method to examine how professionals link ways of doing, thinking, and knowing in anepistemic frame that guides their reflection-in-action in ways that can inform the design of CSCL environments.More specifically, this study examines student engineers learning design in a co-op program at a manufacturingcompany to investigate how participant structures, activities, and pedagogies are connected to an epistemicunderstanding of the profession. We do this by addressing three research questions:1. What are the significant activities in the engineering co-op program?2. What are the participant structures of reflection that are used in those activities?3. How do the participant structures of reflection relate to the epistemologies of the engineering co-op?MethodsParticipants, setting, and data collectionGammaCorp is a global engineering company that designs and manufactures high pressure hydraulic pumps andindustrial tools. This study was conducted at a GammaCorp company branch and focused on two students whowere new to the co-op at the time of the observations, including Kate, two students who had been in the programfor several months at the time of the observations, including Noah and Amir, as well as six senior engineers whointeracted with the students at various times, including Allen and Robin. All names used here are pseudonyms,and no demographic information was collected about the participants.Data was collected in two forms: observations and interviews. A researcher was present as an observerfor ten days from June to August. This included two project management meetings and seven meetings betweenengineers and students. Observational data was collected data in the form of audio recordings and field notes.Interviews were conducted with the four students and two engineers.CSCL 2015 Proceedings205© ISLSData analysisObservations and interviews were segmented into utterances—every time a participant took a turn to speakduring a conversation. Using a grounded theory approach (Glaser & Strauss, 1967) a coding scheme wasdeveloped representing activities, pedagogies, and the key knowledge and epistemological stances of the co-op:• Problem Solving: Development of a solution to a technical issue as part of an engineering design• Documentation: Completion of forms and other written documents describing a design• Feedback: A critique about a design artifact or design idea or an informative or corrective suggestion.• Modeling: Using a tool or exemplar to demonstrate a task or idea.• Customer Knowledge: Referring to the customer• Technical Knowledge: Referring to technical or mathematical concepts.• Epistemology of Translating Customer Requests to Technical Requirements: Describingengineering design in terms of using technical knowledge to address the customer requests• Epistemology of Translating Technical Requirements to Customer Requests: Describingengineering design in terms of explaining technical requirements and details of the design to thecustomerTwo types of activities were identified: problem solving and documenting. Two main types ofpedagogies were identified: feedback and modeling.Epistemic network analysis (ENA) was used to investigate the underlying relationships among theactivities, knowledge, and epistemologies of engineering as expressed by participants in interviews andobservation. ENA has been described in greater detail elsewhere (Shaffer, 2014; Shaffer et al., 2009), but inbrief, ENA models coded data by grouping the utterances (in this case answers to interview questions for agiven participant) and producing an adjacency matrix for each utterance to determine which codes are linked(that is, which ones co-occur).To identify patterns of connections in the data, ENA sums the adjacency matrices for each participant uinto a cumulative adjacency matrix, Cu, where each cell Cuij represents the number of stanzas in which a codes iand j were both present. These cumulative adjacency matrices are then converted into network graphs in whicheach node corresponds to a code from the coded dataset and lines connecting nodes represent co-occurrences ofcodes in the data. Thicker lines correspond to stronger connections in the data between elements of discourse inthe model.ResultsThe results of this study are described in three parts below. First is a description of the two main activities of theco-op: problem solving and documenting. Second is a description of the two main pedagogical methods of theco-op: feedback and modeling. Finally, we examine the relationship between the activities and the pedagogythrough the lens of a key epistemological element of the engineering practice.ActivitiesThe design work of co-op students at GammaCorp consists of two main activities: problem solving anddocumentation.Problem solvingDuring the problem solving process, students attempted to meet the requests of the customer by either designinga unique solution or modifying previously made solutions. For example, midway through Amir’s program afterhe had some experience working at the company, he was asked to design a tow cart that would house a varietyof tools. When Amir received the task, a sales representative at the company had “quoted it out” to thecustomer. This meant that the customer already had an idea of how much the product would cost and hadexplained to a sales representative what he expected from the product. Amir received the quote and thecustomer’s requests, which gave him an approximate budget and some direction on which parts to use to designthe cart. Amir summarized the requests, “They want this design pump. They want it to be a six-point lift systemwith all these full controls. They want to be able to store this all on this cart. They want storage for these hoses.And they want to be able to lift it and drive it around a shipyard.”When Amir received this information, he approached Allen, one of the senior engineers, to get moreinformation on what his first steps should be. Allen explained that Amir had to find a way to build and designthe cart using the CAD drawing tool. Allen suggested that instead of trying to design the final product, AmirCSCL 2015 Proceedings206© ISLSshould first complete a minimal and basic design. Amir could then ask for feedback on the simple design, andthen complete several iterations to design the details of the final product. Allen and Amir worked together onsketching some basic designs and discussed how the parts could potentially fit together. When Amir returned tohis desk to work on designing the tow cart, he began by reviewing the sketches that he and Allen had made.After some trial and error with the CAD program, Amir figured out which pieces he could mount together andhow they would fit collectively.One week later Amir had a preliminary design, as Allen had suggested. He printed out the drawingsand asked some engineers for feedback. Unfortunately, it did not go as well as Amir had expected. “They railedme on everything,” Amir laughed as he recalled the meeting. For example, he had some hoses sticking out inmany different places on the tow cart, which blocked the customer’s access to the controls on the cart. Theengineers asked that Amir make several changes and present the design to them once the changes had beenmade.One week later, Amir showed the engineers a second design. This time the engineers asked Amir tomake only minor changes. Once those minor changes were made and approved, Amir could finalize the designto send out to the customer.DocumentationOnce the customer approved the design, Amir had to document his work. First, he completed a part release formthat released all the parts into the manufacturing system. This form ensured that the manufacturing line couldproduce and assemble all the parts needed for his tow cart product. Amir explained the importance of thisdocumentation stage:Basically anytime that we have anything new that is designed or a design that is based off of apart, we need to release a new part into the system with all the correct coding, costinformation. We've got to get that all coded and get that released into our system, so thatorders can be made. It can be a hassle, but it’s something we need to do, need to be able todocument everything that happened with it.Next, Amir completed a product requirements document (PRD), which is a document that describes thespecifications and functions of a product. The PRD also includes instructions for assembly or operation. Afterthe product was assembled, he went down to the manufacturing area to take photos of the product. He wanted tofile the photos so other engineers could see a final version of the product or use the photo to show futurecustomers, in case another customer wanted to order something similar.While this process was relatively smooth for Amir’s cart design, co-op students often needed helpcompleting this part of their work For example, one month into the program, Kate had some difficulty withdocumentation for a customer’s order: She didn’t know what product numbers she should use. She thought sheneeded an “M” product number, but she didn’t know how to find the right number. One of the more senior coop students, Noah, tried to help, but he didn’t know either. So Kate sent an instant message to Robin, one of thesenior engineers.When Robin arrived, she examined the documentation on Kate’s the computer. Noah said that hethought they were supposed to release the “M” parts for manufacturing. Robin explained that there were twoforms of documentation to complete because there were two parts of the design that needed to be documented.Then she leaned over the computer to use the keyboard and showed Kate and Noah how to complete thedocumentation. Kate asked several questions about how to document, and Robin responded by showing herwhat forms to use and where to find the part information to complete the documentation.Participant structures of reflectionThe examples in the previous section of the results show two distinct forms of activity in the co-op, each ofwhich is a form of reflection-on-action:In the problem solving activity, the student (Amir) engaged in action by creating a design artifact. Hepresented this artifact to his mentors, who reflected on the student’s action by providing feedback. In otherwords, in this example of problem solving, the main form of reflection-on-action was the mentor reflecting onstudent action.In the documentation activity, the students (Kate and Noah) initiated the meeting with a mentor. Butthen the mentor took action by completing the appropriate forms while the students watched. The students thenreflected on the mentor’s action by asking clarifying questions. In this example of documentation, the main formof reflection-on-action was the student reflecting on mentor action.CSCL 2015 Proceedings207© ISLSKate: Novice Co-opAmir: Experienced Co-opRobin: Senior EngineerFigure 1. Epistemic Network Models for Co-op students and EngineersThis pattern of association between activity and pedagogy was true generally throughout thispracticum. Student reflection on mentor action occurred mainly during documentation and mentor reflection onstudent action occurred mainly in problem solving activities (see Table 1; difference significant using Fisher’sExact Test at p <.01).Table 1: Number of times feedback and modeling were used in problem solving and documentingProblem SolvingDocumentingFeedback61Modeling014EpistemologyThe epistemologies of translationThis part of the results section explores the epistemological foundations of engineering design as practiced atGammaCorp that may explain this correspondence of activity and the participant structures of reflection.Specifically, we note that a critical element of engineering thinking at GammaCorp is the epistemology oftranslation, which appears in two forms: translation of customer needs into design specifications, and thereciprocal translation of the resulting design specifications into a form understandable by the customer.CSCL 2015 Proceedings208© ISLSFirst, we note that the development of these epistemologies of translation is a key component ofprofessional expertise. ENA models of participant interviews about their practice show progressive integrationof the epistemology of translation between customer and the technical space of design and also the epistemologyof translation back from the technical aspects of a design to customer as engineers become more advanced intheir training.Three of these networks are shown in Figure 1 above. These models suggest that both novice andexperienced students made fewer connections to the epistemologies of translation than senior engineers. Forexample, Kate described the importance of technical knowledge and customer knowledge while problemsolving, but never connected these skills and knowledge to an understanding about why engineers work in theway they do:There is this big piece of equipment, and they need to something to sit on, because they justhave to mount some wood.Amir, a more senior student, made strong connections in his network between problem solving andtechnical knowledge and customer knowledge. However, he also connected this knowledge to the epistemologyof translating the technical design into a form understandable by the customer:A big part of this was going to be that I wanted to have the customer be able to operateeverything on this Tow Cart standing from one point.Robin, as a senior engineer, had a network with more robust connections to the epistemologies oftranslation than either of the students. Further, Robin’s network shows that the activity of documentation is veryclosely connected with the epistemology of translation from the technical world of design to the customer.Differences between the epistemologies of translationThe processes of translation from customer to design and translation from design to customer both exist withinthe ill-structured world of design. However at GammaCorp, the process of translation from design to customeris a relatively constrained activity within the broader design process. The actual product is already designed.The task that remains for the engineer at GammaCorp is to communicate the salient details of design to theclient through the company’s documentation software. In the first week of the co-op program, students attendeda training session on how to use the documentation tools. This training took place in a classroom setting; anengineer distributed a manual, projected the software tool on a screen, and reviewed the manual page by page.Afterwards, students completed exercises in the manual. The epistemology of translation from design tocustomer is algorithmic: there is a specified process to follow. Determining which process to use may becomplex, but the process itself follows clear guidelines. As Noah, one of the student co-ops, described it: “It'spretty... it's not like it's confusing, but it is at the same time.”In contrast, when students engage in problem solving, there are few clearly defined procedures. Therewere no manuals or training classrooms at the beginning of the co-to teach students to solve design problems.Instead, students were given a broad task to accomplish and came to the more senior engineers for feedback. Forexample, Amir said that his work as a co-op began when one of the engineers “basically gave me a rundown ofwhat was expected of me. Basically I had to create an ID drawing of everything once I had designed the frameand everything and… we should have the really basic design done before getting into too many specifics.” Inother words, the epistemology of translation from customer requirements to artifact design is fundamentallymore ill-formed than the process of documenting the results of a design.DiscussionTwo cycles of translationThe results above suggest that design in this engineering practicum was a combination of two different cycles ofaction and reflection-on-action. Moreover, the participant structures of reflection in these cycles were shaped bytwo related but significantly different epistemologies of translation in the engineering design process.Translating customer needs into a designThe students started with a design task and engaged in iterative problem solving in order to translate thecustomer requests into technical requirements. When students needed assistance with problem solving, theyinitiated meetings with engineers. The engineers offered feedback on the students’ design. The students thenCSCL 2015 Proceedings209© ISLScontinued designing until they needed assistance again. This reflection cycle continued until the engineerscollectively decided that the students had designed a solution that met the client’s requests. But a fundamentalproperty of the problems solving process was epistemological: there was no clear right answer or even singlebest way to go about developing an answer. The epistemology of translation from customer requirements tofinished design was ill-structured, and the reflection-on-action in this context was structured as mentor reflectionon student action.Translating a design back to the customerNext, students documented the design in order to translate the technical requirements into a form that wasinterpretable by the customer. Similar to the problem solving activity, if students were unsure of how todocument a product, they initiated meetings with senior engineers. However, in meetings that centered ondocumentation, engineers modeled procedures and the students asked questions. A fundamental property of thedocumentation process at GammCorp was also epistemological: there was a right way to communicate therelevant features of a design to the client using GammaCorp’s documentation tool. The epistemology oftranslation from customer requirements to finished design was relatiely well-formed, and the reflection-onaction in this context was structured as student reflection on mentor action.Engineering design translation cycleIn other words, this epistemographic analysis of an engineering co-op suggests that at GammaCopr there was arelationship between forms of activity and forms of reflection that can be explained by differences in theepistemologies that guide both. There are two independent reflection cycles within the larger design process.This model, which we describe as the Engineering Design Translation Cycle (Figure 2), exemplifies a particularmethod of thinking about engineering design.Figure 2. Engineering design translation cycleThe two forms of reflection-on-action—mentor reflection on student action and student reflection onmentor action—help students develop an epistemic understanding of translation between the customer andtechnical world. But importantly, one form of reflection—mentor relfecion on student action—is associated withproblem solving in design, an activity grounded in the epistemology of translation from customer requirementsand the technical world of design, a decision-making process that is open-ended and ill-formed. Students areencouraged to explore the design space and get feedback from their mentors. The other form of reflection—student reflection on mentor action—is associated with documentation, an activity grounded in the epistemologyof translation from the technical world of the design back to the language of the customer, a decision-makingprocess that is relatively well-formed. Students are encouraged to watch a mentor enact the correct procedureand ask questions to generate and confirm understanding.ImplicationsThere are several key implications of this study for the CSCL community.First, this work suggest that in collaborative learning contexts such as a practicum in ill-structureddomains like engineering design there may well-formed activities that need to be accounted for in any learningCSCL 2015 Proceedings210© ISLSdesign. Second, this work extends Schön’s characterization of the participant structures of reflection-on-action.It suggests that forms of reflection-on-action may be driven by the epistemological nature of the action beingreflected on. In particular, in the case in question, mentor-reflecting-on-student-action was associated with illformed tasks, whereas student-reflecting-on-mentor-action was associated with more well-formed activities inthe domain. These results have clear implications for any CSCL application designed for ill-structured domainswhere learning is characterized by cycles of action and reflection-on-action.More broadly, though, this study suggests that the process of epistemography—the analysis of theepistemological features of a learning environment—is a useful tool for uncovering the rationale behind theparticipant structures of reflection, and perhaps of pedagogy more generally. Thus, epistemography—and itsassociated theory of epistemic frames and analytical method of epistemic network analysis—is a useful tool inthe development and analysis of collaborative learning environments.ReferencesAnderson, J. R., Herbert, L. M. R., & Simon, A. (1997). Situated Versus Cognitive Perspectives: Form VersusSubstance. Educational Researcher, 26(1), 18–21.Bagley, E. A., & Shaffer, D. W. (2010). The epistemography of urban and regional planning 912: Appropriationin the face of resistance. In Proceedings of the 9th International Conference of the Learning Sciences.Chicago, IL.Bandura, A. (1986). Social foundations of thought and action: A social cognitive theory. Englewood Cliffs, NJ:Prentice-Hall.Cross, N. (1994). Engineering Design Methods: Strategies for Product Design (2nd ed.). Chichester, UK: JohnWiley & Sons.Dym, C. L. (1994). Teaching design to freshmen: Style and content. Journal of Engineering Education, 83(4),303–310.Glaser, B., & Strauss, A. (1967). The Discovery of Grounded Theory. Chicago, IL: Aldine Pub Co.Hatfield, D., & Shaffer, D. W. (2010). THE EPISTEMOGRAPHY OF JOURNALISM 335: Complexity inDeveloping Journalistic Expertise. In Proceedings of the 9th International Conference of the LearningSciences (Vol. 1, pp. 629–635). Chicago, IL.Lave, J., & Wenger, E. (1991). Situated learning: Legitimate peripheral participation. Cambridge, MA:Cambridge University Press.Nash, P., & Shaffer, D. W. (2013). Epistemic trajectories: Mentoring in a game design practicum. InstructionalScience, 41(4), 745–771.Schön, D. A. (1987). Educating the reflective practitioner: Toward a new design for teaching and learning inthe professions. San Francisco: Jossey-Bass.Shaffer, D. W. (2005). Epistemography and the Participant Structures of a Professional Practicum: A storybehind the story of Journalism 828. University of Wisconsin-Madison, Wisconsin Center for EducationResearch.Shaffer, D. W. (2007a). How Computer Games Help Children Learn. New York: Palgrave.Shaffer, D. W. (2007b). Learning in Design. In R. A. Lesh, J. J. Kaput, & E. Hamilton (Eds.), Foundations forthe Future in Mathematics Education (pp. 99–126). Mahweh, NJ: Lawrence Erlbaum Associates.Shaffer, D. W. (2014). User guide for Epistemic Network Analysis web version 3.3. Madison, WI: Games andProfessional Simulations Technical Report 2014-1.Shaffer, D. W., Hatfield, D. L., Svarovsky, G. N., Nash, P., Nulty, A., Bagley, E. A., … Frank, K. (2009).Epistemic Network Analysis: A prototype for 21st century assessement of learning. InternationalJournal of Learning and Media, 1(1), 1–21.Wenger, E. (1999). Communities of Practice: Learning, Meaning, and Identity. New York, NY: CambridgeUniversity Press.AcknowledgementsThis work was funded in part by the MacArthur Foundation and by the National Science Foundation throughgrants DRL-0918409, DRL-0946372, DRL-1247262, DRL-1418288, DUE-0919347, DUE-1225885, EEC1232656, EEC-1340402, and REC-0347000. The opinions, findings, and conclusions do not reflect the views ofthe funding agencies, cooperating institutions, or other individuals.CSCL 2015 Proceedings211© ISLS