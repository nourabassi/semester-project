Student Learning of Computational Thinking in a RoboticsCurriculum: Transferrable Skills and Relevant FactorsGuanhua Chen and Ji Shengxc186@miami.edu, j.shen@miami.eduUniversity of MiamiAbstract: This poster presents findings from the implementation of a robotics curriculumemphasizing applying computational thinking (CT) to solve both programming and everydayreasoning problems. Utilizing an online CT instrument as the pre-and-post measure, students’performance, improvement, and process data were analyzed. Results show that the curriculumhelped students improve CT in both scenarios. While student self-determination waspositively correlated to their score gains, other factors (gender, class, familiarity with problemsettings) were not.IntroductionSince Papert (1980) coined the term computational thinking (CT), it has gradually gained its momentum as animportant learning goal. Wing (2006) made it clear that CT should be considered as a foundational skill studentsneed to develop in and out of schools. However, scholars have yet to achieve a widely acknowledged definition;different explanations on what CT entails were proposed (Barr & Stephenson, 2011; Grover & Pea, 2013). Mostof these interpretations framed CT in a problem-solving process and emphasized its power to transfer acrosstasks and domains (Wing, 2006; CSTA, 2011). Current practices of teaching CT in programming contexts havedifficulty in preparing students to transfer problem-solving skills to other non-programming contexts. Moreover,it is difficult to assess CT gain for younger students with minimum prior programming experience.In order to fill these gaps, we developed a robotics programming curriculum with an emphasis on CTas applicable to everyday settings together with an instrument in accordance with this connotation. We hope thatby completing our robotics curriculum, students gain knowledge and skills that could be applied to solving notonly programming but also everyday-reasoning problems. We are also interested in if certain student knowledgeand characteristics (such as their familiarity with certain problem contexts) factor into their initial performanceand learning gains. Two research questions guided our study: (1) Does the robotics programming curriculumimprove students’ CT in both programming and everyday reasoning contexts? (2) What student characteristicsare relevant in explaining their initial performance and learning gains?Methods and resultsBased on experience gained from two pilot runs, we finalized a robotics curriculum for upper elementary schoolstudents using an autonomous, programmable humanoid robot platform NAO, with emphasis on both robotbasics and application of learned concepts to solve everyday reasoning problems. The curriculum wasimplemented in a Title I elementary school in southeast United States. All the fifth grade classes (6 classes; 125students) adopted the curriculum. Each class spent about two hours each day on the curriculum for 5consecutive days.Based on our framework of CT (Chen et al., 2017) adapted from the CSTA (2011) definition, ourcurrent online CT assessment could record students’ answers to and actions with items. It has two types ofscenario: robotics programming (programming a robotic arm to draw and a robot to move) and everydayreasoning (cooking, booking flight tickets, and doing laundry). The same assessment was used as the pre-andposttest for this study. Students’ familiarity of everyday settings involved in the assessment was asked in thepretest. And they were asked to complete a science motivation questionnaire adapted from Glynn et al. (2011) inthe posttest. The assessment took students about 30-60 minutest to finish. In total 107 completed responses ofboth pre-and-posttest were analyzed.In order to answer the first research question, paired t-test was used to calculate the statisticalsignificance of learning gain. Results (t(106)=-5.15, p=0.0000, d=0.24) revealed that students did statisticallysignificantly better, with low to medium effect sizes, in posttest than pretest. Moreover, they gained more ineveryday reasoning items (t(106)=-4.97, p=0.0000, d=0.36) than programming items (t(106)=-3.60, p=0.0002,d=0.18). Also, fine-grained process data can provide insight into better understanding of student application ofCT in problem solving. For example, some students’ score gain from pretest to posttest could be validated andscore lose explained. And calculation of problem solving time based on action timestamps revealed that whereasscore increase might be due to students’ improved CT skills that enabled them to spend more time in solvingICLS 2018 Proceedings1439© ISLSthis item, score decrease seemed to be caused by students’ unwillingness to spend enough time in posttest. Theirreluctance might be directly related to the boringness of writing lines of code.To answer the second research question, two-sample t-test was used to test the gender differences inpretest and score gain. Neither a statistically significant difference was found between male and female studentsin pretest (t= -0.17, df= 103.72, p= 0.86), nor in score gain (t= -1.13, df= 102.51, p= 0.26). This indicates thatgender did not have an effect on students’ initial performance and gains after this curriculum. In addition,appropriate correlations were calculated to examine the possible relationship between student familiarity witheveryday reasoning and programming settings and their pretest performance and gains. These results show thatstudents’ familiarity with and experience in both everyday scenario and programming settings did not associatesignificantly with their pretest performance and gains from pretest to posttest. Also, only self-determination issignificantly and positively correlated with score gain (r=0.197, t(105)=2.06, p=0.041). One-way ANOVA wasused to test class differences and their relationship with student pretest score and gains. The results showstatistically significant difference among classes in terms of pretest score (F(5,101)=9.079, p=0.000). However,no significant difference was found for score gains among the six classes (F(5,101)=1.446, p=0.214). This resultshows that although the students from different classes started with different pretest performance, they gainedsimilarly from the curriculum.ConclusionThis study summarized our effort to evaluate student progress in acquiring CT skills from participating in ourrobotics programming curriculum. The results showed that students benefited from the curriculum in solvingboth programming and everyday reasoning items as well as relevant student features in determining their initialperformance and CT gain as indicated by their pre-and-posttest scores. This study also revealed the potential ofusing logged data to understand students’ application of CT in problem-solving process toward a betterunderstanding of their learning gain.ReferencesBarr, V., & Stephenson, C. (2011). Bringing computational thinking to K-12: what is Involved and what is therole of the computer science education community?. Acm Inroads, 2(1), 48-54.Chen, G., Shen, J., Barth-Cohen, L., Jiang, S., Huang, X., & Eltoukhy, M. (2017). Assessing elementarystudents’ computational thinking in everyday reasoning and robotics programming. Computers &Education, 109, 162-175.CSTA (2011). Operational Definition of Computational Thinking for K–12 Education, 2011. Accessed fromhttps://c.ymcdn.com/sites/www.csteachers.org/resource/resmgr/CompThinkingFlyer.pdfGlynn, S. M., Brickman, P., Armstrong, N., & Taasoobshirazi, G. (2011). Science motivation questionnaire II:Validation with science majors and nonscience majors. Journal of research in science teaching, 48(10),1159-1176.Grover, S., & Pea, R. (2013). Computational thinking in K–12: A review of the state of the field. EducationalResearcher, 42(1), 38-43.Papert, S. (1980). Mindstorms: Children, computers, and powerful ideas. Basic Books, Inc.Wing, J. M. (2006). Computational thinking. Communications of the ACM, 49(3), 33-35.AcknowledgementsThis material is based upon work supported by the U.S. National Science Foundation (NSF) under grant numberDRL1523010. Any opinions, findings, and conclusions expressed in this poster are those of the authors and donot necessarily reflect the views of the NSF.ICLS 2018 Proceedings1440© ISLS